!function(n,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.Papyros=e():n.Papyros=e()}(self,(function(){return(()=>{"use strict";var n={905:(n,e,t)=>{var r;t.d(e,{ProgrammingLanguage:()=>r}),function(n){n.Python="Python",n.JavaScript="JavaScript"}(r||(r={}))},849:(n,e,t)=>{t.d(e,{JAVASCRIPT_EXAMPLES:()=>r});var r={"Hello world!":'console.log("Hello, World!");',Input:"const name = prompt('What is your name?')\nconsole.log(`Hello, ${name}!`)",Fibonacci:"function fibonacci(n){\n    if (n <= 1) {\n        return n;\n    }\n    return fibonacci(n - 2) + fibonacci(n - 1);\n}\nfor(let i = 0; i < 10; i += 1){\n    console.log(fibonacci(i));\n}\n"}},652:(n,e,t)=>{t.d(e,{PYTHON_EXAMPLES:()=>r});var r={"Hello, World!":"print('Hello, World!')",Input:"name = input('What is your name?')\nprint(f'Hello, {name}!')",Fibonacci:"def fibonacci(n):\n    return n if n <= 1 else fibonacci(n- 2) + fibonacci(n - 1)\n\nprint([fibonacci(n) for n in range(10)])",Doctests:'def factorial(n):\n    """Return the factorial of n, an exact integer >= 0.\n\n    >>> [factorial(n) for n in range(6)]\n    [1, 1, 2, 6, 24, 120]\n    >>> factorial(30)\n    265252859812191058636308480000000\n    >>> factorial(-1)\n    Traceback (most recent call last):\n        ...\n    ValueError: n must be >= 0\n\n    Factorials of floats are OK, but the float must be an exact integer:\n    >>> factorial(30.1)\n    Traceback (most recent call last):\n        ...\n    ValueError: n must be exact integer\n    >>> factorial(30.0)\n    265252859812191058636308480000000\n\n    It must also not be ridiculously large:\n    >>> factorial(1e100)\n    Traceback (most recent call last):\n        ...\n    OverflowError: n too large\n    """\n\n    import math\n    if not n >= 0:\n        raise ValueError("n must be >= 0")\n    if math.floor(n) != n:\n        raise ValueError("n must be exact integer")\n    if n+1 == n:  # catch a value like 1e300\n        raise OverflowError("n too large")\n    result = 1\n    factor = 2\n    while factor <= n:\n        result *= factor\n        factor += 1\n    return result\n\ndef wrong_factorial(n):\n    """\n    >>> [wrong_factorial(n) for n in range(6)]\n    [1, 1, 2, 6, 24, 120]\n    >>> wrong_factorial(30)\n    265252859812191058636308480000000\n    """\n    return 0\n\nif __name__ == "__main__":\n    import doctest\n    doctest.testmod()\n',Async:"async def main():\n    import micropip\n    await micropip.install('snowballstemmer')\n    import snowballstemmer\n    stemmer = snowballstemmer.stemmer('english')\n    print(stemmer.stemWords('go goes going gone'.split()))\n\nawait main()",Erroneous:"def bitonic_search(numbers, query):\n    if not numbers:\n        return -1\n    if len(numbers) == 1:\n        return 0 if numbers[0] == query else -1\n    int top_index = find_max_index(numbers, 0, len(numbers))\n    possible_position = find_bitonic_query(numbers,query,0,top_index+1, lambda a, b: a - b)\n    if possible_position != -1:\n        return possible_position\n    else:\n        return find_bitonic_query(numbers,query,top_index, len(numbers), lambda a, b: b - a)\n\ndef find_max_index(numbers, start, stop):\n    while start <= stop:\n        if stop - start <= 1:\n            return start\n        middle = (start + stop) / 2;\n        if numbers[middle] < numbers[middle+1]:\n            start = midden + 1\n        else:\n            stop = midden\n        \ndef find_bitonic_query(numbers, query, start, stop, comp):\n    while start <= stop:\n        if stop - start <= 1:\n            return start if numbers[start] == query else -1\n        middle = (start + stop) / 2;\n        if comp(numbers[midden], query) <= 0:\n            start = midden\n        else:\n            stop = midden\n",Unicode:"import random\nemoji = '🎅🤶👪🦌🌟❄️☃️🔥🎄🎁🧦🔔🎶🕯️🦆'\nfor _ in range(10):\n    print(''.join(random.choice(emoji) for _ in range(30)))\n",Files:'with open("names.txt", "w") as out_file:\n    for name in ["Alice", "Bob", "Claire"]:\n        print(name, file=out_file)\n\nwith open("names.txt", "r") as in_file:\n    for line in in_file:\n        print(line.rstrip())\n',Matplotlib:"import numpy as np\nimport matplotlib.pyplot as plt\n\nx = np.linspace(0, 10, 1000)\nplt.plot(x, np.sin(x));\n\nplt.show()\n",Sleep:'import time\nprint("See you in a few seconds!")\ntime.sleep(3)\nprint("Good to see you again!")\n'}}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var i=e[r]={exports:{}};return n[r](i,i.exports,t),i.exports}t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.r=n=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})};var r={};return(()=>{t.r(r),t.d(r,{getCodeForExample:()=>l,getExampleNames:()=>s,getExamples:()=>a});var n=t(905),e=t(849),o=t(652),i=new Map([[n.ProgrammingLanguage.JavaScript,e.JAVASCRIPT_EXAMPLES],[n.ProgrammingLanguage.Python,o.PYTHON_EXAMPLES]]);function a(n){return i.has(n)?i.get(n):{}}function s(n){return Object.keys(a(n))}function l(n,e){return a(n)[e]}})(),r})()}));